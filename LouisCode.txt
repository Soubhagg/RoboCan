classdef Assignment2
    properties(Access = public)
        GripperBase1;LeftHand;RightHand;
        robot;
    end
    methods
        function self = Assignment2()
            warning('off')
            axis([-2 2 -2 2 -0.01 4])
            hold on
            self.robot = UR3(transl(0,0,1.5));
            baseTr = self.robot.model.fkine(self.robot.model.getpos).T*transl(0,0,-0.01)*troty(pi);

            self.GripperBase1 = GripperBase(baseTr);
            GripperHand1 = self.GripperBase1.model.fkine(self.GripperBase1.model.getpos).T*transl(0,0.015,-0.06)*troty(pi/2);
            GripperHand2 = self.GripperBase1.model.fkine(self.GripperBase1.model.getpos).T*trotz(pi)*transl(0,0.015,-0.06)*troty(pi/2);
            self.LeftHand = GripperHand(GripperHand1);
            self.RightHand = GripperHand(GripperHand2);
            self.Add_models()
            self.run()
        end
        %% Add table
        function Add_models(self)
            Table = PlaceObject('Table.ply');
            Table_vertices = get(Table,'Vertices');
            transformedVerticesT = [Table_vertices,ones(size(Table_vertices,1),1)]*troty(-pi/2)'*transl(0,0,1.4)';
            set(Table,'Vertices',transformedVerticesT(:,1:3));
            % Add cans

            Can1 = PlaceObject('Canbody.ply');
            Can1_vertices = get(Can1,'Vertices');
            Can1_transformedVerticesT = [Can1_vertices,ones(size(Can1_vertices,1),1)]*trotx(-pi/2)*transl(0.5,0,1.5)';
            set(Can1,'Vertices',Can1_transformedVerticesT(:,1:3));

        end
        %% Test Movement
        function run(self)
            q_open =  [1.1345,0,0.6213];
            q_close = [0.2356,0,1.5184];
            q_matrix = jtraj(q_open,q_close,200);
            Q2 = [-3.6827   -1.3967    2.2212   -0.8245    1.0295   -3.1417];
            q_matrix2 = jtraj(self.robot.model.getpos,Q2,200);
            self.LeftHand.model.delay = 0;
            self.RightHand.model.delay = 0;
            self.robot.model.delay = 0;
            self.GripperBase1.model.delay = 0;
            for i=1:200
                self.GripperBase1.model.base = self.robot.model.fkine(self.robot.model.getpos).T*transl(0,0,-0.01)*troty(pi);
                self.LeftHand.model.base = self.GripperBase1.model.base.T*transl(0,0.015,-0.06)*troty(pi/2);
                self.RightHand.model.base = self.GripperBase1.model.base.T*trotz(pi)*transl(0,0.015,-0.06)*troty(pi/2);
                self.robot.model.animate(q_matrix2(i,:));

                self.GripperBase1.model.animate(0);
                self.LeftHand.model.animate(self.LeftHand.model.getpos);
                self.RightHand.model.animate(self.RightHand.model.getpos);

                drawnow
            end
            for i = 1:200
                self.LeftHand.model.animate(q_matrix(i,:));
                self.RightHand.model.animate(q_matrix(i,:));
                drawnow()
            end
        end
    end
end

